+++++++++++++++++++++
Debug a CPython crash
+++++++++++++++++++++

Core dump
=========

Write core dumps on the current directory::

    $ ulimit -c
    unlimited
    $ sudo bash -c 'echo "coredump-%e.%p" > /proc/sys/kernel/core_pattern'

Check that it works::

    $ ./python -c 'import _testcapi, signal; _testcapi.raise_signal(signal.SIGABRT)'
    Aborted (core dumped)
    $ ls coredump*
    coredump-python.23861

    $ gdb ./python -c coredump-python.23861
    GNU gdb (GDB) Fedora 8.0.1-36.fc27
    (...)
    Core was generated by `./python -c import _testcapi, signal; _testcapi.raise_signal(signal.SIGABRT)'.
    Program terminated with signal SIGABRT, Aborted.
    (gdb) where
    #0  0x00007fb0cb3ad050 in raise () from /lib64/libpthread.so.0
    #1  0x00007fb0c3a53006 in test_raise_signal (self=<module at remote 0x7fb0cb624758>,

Ok, Python crashes generate coredump files and gdb is able to load them.

Load python-gdb.py
==================

Load it manually::

   (gdb) source /path/to/python-gdb.py

Add directory containing Python source code to "safe path", to automatically
load python-gdb.py when debugging Python. Add the following line to your
``~/.gdbinit``::

   add-auto-load-safe-path ~/prog/

In my case, Python is in ``~/prog/python/master``, but I chose to allow to load
any Python script from ``~/prog/``.

On Fedora, the script is provided as::

   /usr/lib/debug/usr/lib64/libpython3.6m.so.1.0-3.6.6-1.fc28.x86_64.debug-gdb.py
